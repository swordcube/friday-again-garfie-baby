name: Linux Build
on:
  push:
    branches: [ legacy/flixel ]
  workflow_dispatch:
jobs:
  build:
    name: Linux Build
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Pulling the new commit
        uses: actions/checkout@main
      - name: Setting up Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.7
      - name: Restore existing build cache for faster compilation
        uses: actions/cache@v3
        with:
          # not caching the bin folder to prevent asset duplication and stuff like that
          key: cache-build-linux
          path: |
            .haxelib/
            export/release/linux/haxe/
            export/release/linux/obj/
          restore-keys: |
            cache-build-linux
      
      - name: Installing LibVLC and LuaJIT
        run: |
          sudo apt-get update
          sudo apt-get install libvlc-dev libvlccore-dev libluajit-5.1-dev

      - name: Install lime dependencies
        run: |
          sudo apt-get install libgl1-mesa-dev libglu1-mesa-dev g++ g++-multilib gcc-multilib libasound2-dev libx11-dev libxext-dev libxi-dev libxrandr-dev libxinerama-dev
          sudo apt-get install libgtk-3-dev libpango1.0-dev libcairo2-dev libharfbuzz-dev libatk1.0-dev libgdk-pixbuf2.0-dev libglib2.0-dev libpulse-dev

      - name: Installing/Updating libraries
        run: |
          haxelib --global --always install hmm
          haxelib run hmm install

          haxelib remove rulescript
          haxelib git rulescript https://github.com/Kriptel/RuleScript.git dev
          
          haxelib set lime git
      
      - name: Building HXCPP
        run: |
          cd ./.haxelib/hxcpp/git/tools/hxcpp
          haxe compile.hxml
          cd ../../../../../

      - name: Building Lime
        run: |
          haxelib --always run lime rebuild linux

      - name: Building the game
        run: |
          haxelib --always run lime build linux -DDEV_BUILD
      
      - name: Tar files
        run: tar -zcvf GarfieEngine.tar.gz -C export/release/linux/bin .
      - name: Uploading artifact (entire build)
        uses: actions/upload-artifact@v4
        with:
          name: Friday Again Garfie Baby
          path: GarfieEngine.tar.gz
      
      - name: Clearing already existing cache
        uses: actions/github-script@v6
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              if (cache.key == "cache-build-linux") {
                console.log('Clearing ' + cache.key + '...')
                await github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                })
                console.log("Cache cleared.")
              }
            }
      - name: Uploading new cache
        uses: actions/cache@v3
        with:
          # caching again since for some reason it doesnt work with the first post cache shit
          key: cache-build-linux
          path: |
            .haxelib/
            export/release/linux/haxe/
            export/release/linux/obj/
          restore-keys: |
            cache-build-linux